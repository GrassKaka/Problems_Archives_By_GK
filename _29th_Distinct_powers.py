# -*- coding: utf-8 -*-
import logging

logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s - [%(levelname)s] : %(message)s')

"""
Distinct powers

Problem 29
Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, 
we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 
and 2 ≤ b ≤ 100?
"""
# 判断一个数是否为质数
def isPrime(number):
    if number == 1:
        return False
    if number == 2:
        return True
    for i in range(2, int(np.sqrt(number))+2):
        if number % i == 0:
            return False
    return True
# 2**8 = 4**4 = 16**2
# 2**81 = 8**27 = (??)**9
# 2**27 = 8**9 = (??)**9
# 2**90 = 4**45 = (??)**9
# 2**90 = 8**30 = 64 ** 15

def checkB(b):
    if isPrime(b):
        return False
    else:


count = 0

for a in range(2, 101):
    for b in range(2, 101):
