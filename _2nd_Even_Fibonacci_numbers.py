# -*- coding: utf-8 -*-
import logging

logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s - [%(levelname)s] : %(message)s')

"""
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""

# 创建搜集偶数斐波那契数列值的函数
def even_fibFunc(max_value):
    fib1, fib2 = 1, 1 # 斐波那契数列的第一个和第二个值
    even_fib_lst = []
    while fib2 < max_value: # 判断最新产生的值是否小于指定值，这里为四百万
        if fib2 % 2 ==0: # 判断最新产生的值是否为偶数
            even_fib_lst.append(fib2)
        fib1, fib2 = fib2, fib1 + fib2 # 产生下一个斐波那契数列值
    return even_fib_lst # 返回偶数斐波那契数列值的目标列表

logging.debug(sum(even_fibFunc(4000000))) # 开始计算
